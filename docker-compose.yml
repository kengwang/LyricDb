version: '3'
services:
  rabbitmq:
    image: masstransit/rabbitmq
    restart: always
    networks:
      - backend
  
  db:
    image: postgres:latest
    restart: always
    networks:
      - backend
    environment:
      POSTGRES_DB: lyricdb
      POSTGRES_USER: lyricdb
      POSTGRES_PASSWORD: lyricdb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data:/var/lib/postgresql/data
  backend:
    restart: always
    image: ghcr.dockerproxy.com/kengwang/lyricdb-backend:beta-1.1.0
    ports:
      - "17630:8080"
    depends_on:
      - worker
      - db
      - rabbitmq
    networks:
      - backend
    environment:
      - ConnectionStrings__Postgres=Host=db;Port=5432;Database=lyricdb;Username=lyricdb;Password=lyricdb
      - RabbitMQ__Host=rabbitmq
    volumes:
      - ./config/backend/appsettings.json:/app/appsettings.json
  worker:
    restart: always
    image: ghcr.dockerproxy.com/kengwang/lyricdb-worker:beta-1.1.0
    networks:
      - backend
    environment:
      - RabbitMQ__Host=rabbitmq
    depends_on:
      - rabbitmq
    volumes:
      - ./config/worker/appsettings.json:/app/appsettings.json
  frontend:
    restart: always
    image: ghcr.dockerproxy.com/kengwang/lyricdb-frontend:beta-1.1.0
    depends_on:
      - backend
    ports:
      - "17631:3000"

networks:
  backend:
  
  frontend: