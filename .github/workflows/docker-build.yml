name: Docker Image Build
on:
  push: 
    branches:
      - main
jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u kengwang --password-stdin
      - name: Build and push
        run: |
          cd LyricDb.Web
          docker build . -t ghcr.io/kengwang/lyricdb-backend:${{ github.sha }} --build-arg GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          docker push ghcr.io/kengwang/lyricdb-backend:${{ github.sha }}
  build-worker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u kengwang --password-stdin
      - name: Build and push
        run: |
          cd LyricDb.Worker
          docker build . -t ghcr.io/kengwang/lyricdb-worker:${{ github.sha }} --build-arg GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          docker push ghcr.io/kengwang/lyricdb-worker:${{ github.sha }}
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u kengwang --password-stdin
      - name: Build and push
        run: |
          cd LyricDb.Frontend
          docker build . -t ghcr.io/kengwang/lyricdb-frontend:${{ github.sha }} --build-arg GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          docker push ghcr.io/kengwang/lyricdb-frontend:${{ github.sha }}